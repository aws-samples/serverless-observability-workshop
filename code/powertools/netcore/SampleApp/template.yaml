AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for SampleApp

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 100
    Tracing: Active
    Environment: 
      Variables:
        POWERTOOLS_SERVICE_NAME: powertools-dotnet-sample-app
        POWERTOOLS_LOG_LEVEL: Debug
        POWERTOOLS_METRICS_NAMESPACE: SampleApp
        # POWERTOOLS_LOGGER_LOG_EVENT: true
        # POWERTOOLS_LOGGER_CASE: PascalCase # Allowed values are: CamelCase, PascalCase and SnakeCase
        # POWERTOOLS_LOGGER_SAMPLE_RATE: 0
  Api:
    TracingEnabled: true
Resources:
  NetCodeWebAPIServerless:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Description: A simple example includes a .NET Core WebAPI App with DynamoDB
        table.
      CodeUri: ./src/SampleApp/
      Handler: SampleApp
      Runtime: dotnet6
      MemorySize: 1024
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Policies:
        # Give Create/Read/Update/Delete Permissions to the SampleTable
      - DynamoDBCrudPolicy:
          TableName: !Ref SampleTable
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: '2.0'
            Path: /{proxy+}
            Method: ANY
        RootResource:
          PayloadFormatVersion: '2.0'
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: SampleAppItem
      PrimaryKey:
        Name: Id
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
  SampleTable:
    Description: Sample Data Table ARN
    Value: !GetAtt SampleTable.Arn
